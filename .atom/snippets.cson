# CoffeeScritp
'.source.coffee':
  'do':
    'prefix': 'do'
    'body': """
            do${1:(${2:args})}->$3
            """
  'class':
    'prefix': 'class'
    'body': """
            class ${1:ClassName}
            """
  'constructor':
    'prefix': 'const'
    'body': """
            constructor: (${1:args})->$2
            """
  'else':
    'prefix': 'else'
    'body': """
            else
              $1
            """
  'else if':
    'prefix': 'elseif'
    'body': """
            else if ${1:condition}$2
            """
  'extends':
    'prefix': 'extends'
    'body': """
            extends ${1:Ancestor}
            """
  'for in':
    'prefix': 'for in'
    'body': """
            for ${1:name} in ${2:array}$3
            """
  'for in (range)':
    'prefix': 'for in (range)'
    'body': """
            for ${1:name} in [${2:start}..${3:finish}]${4: by ${5:step}}$6
            """
  'for of':
    'prefix': 'for of'
    'body': """
            for ${1:key}, ${2:value} of ${3:Object}$4
            """
  'function':
    'prefix': 'function'
    'body': """
            ${1:(${2:args})}->$3
            """
  'function(bound)':
    'prefix': 'function(bound)'
    'body': """
            (${1:args}) =>$2
            """
  'if':
    'prefix': 'if'
    'body': """
            if ${1:condition}$2
            """
  'if then else':
    'prefix': 'if then else'
    'body': """
            if ${1:condition} then ${2:value} else ${3:other}$4
            """
  'log':
    'prefix': 'log'
    'body': """
            console.log$1
            """
  'switch':
    'prefix': 'switch'
    'body': """
            switch ${1:object}
              when ${2:value}$3
            """
  'when':
    'prefix': 'when'
    'body': """
            when ${1:condition}$2
            """
  'then':
    'prefix': 'then'
    'body': """
            then ${1:action}$2
            """

# JavaScript
'.source.js':
  'add':
    'prefix': 'add'
    'body': 'add(${1:class})'
  'addEventListener':
    'prefix': 'addEventListener'
    'body': """
            addEventListener("${1:event}", function() {
              ${2:// body}
            });
            $3
            """
  'appendChild':
    'prefix': 'appendChild'
    'body': 'appendChild(${1:element});'
  'alert':
    'prefix': 'alert'
    'body': 'alert(${1:message});'
  'children':
    'prefix': 'children'
    'body': 'children'
  'classList':
    'prefix': 'classList'
    'body': 'classList'
  'document':
    'prefix': 'document'
    'body': 'document'
  'DOMContentLoaded':
    'prefix': 'DOMContentLoaded'
    'body': 'DOMContentLoaded'
  'for':
    'prefix': 'for'
    'body': """
            for (var i=${1:init}; ${2:condition}; i ++) {
              ${3:// body}
            }
            """
  'forEach':
    'prefix': 'forEach'
    'body': """
            forEach( function(${1:element}) {
              ${2:// body}
            });
            """
  'for in':
    'prefix': 'for in'
    'body': """
            for (${1:prop} in ${2:obj}) {
              ${0:// body}
            }
            """
  'Function':
    'prefix': 'function'
    'body': """
            function${1: methodName}(${2:arguments}) {
              ${0:// body}
            }
            """
  'immediate function':
    'prefix': 'immediateFunction'
    'body': """
            (function() {
              ${0:// body}
            })();
            """
  'innerHTML':
    'prefix': 'innerHTML'
    'body': 'innerHTML = "${1:element}"'
  'parentNode':
    'prefix': 'parentNode'
    'body': 'parentNode'
  'parents\' children':
    'prefix': 'parentsChildren'
    'body': 'parentNode.children'
  'prompt':
    'prefix': 'prompt'
    'body': 'prompt(${1:message});'
  'prototype':
    'prefix': 'prototype'
    'body': 'prototype'
  'querySelector':
    'prefix': 'querySelector'
    'body': 'querySelector("$1")$2'
  'querySelectorAll':
    'prefix': 'querySelectorAll'
    'body': 'querySelectorAll("$1")$2'
  'remove':
    'prefix': 'remove'
    'body': 'remove(${1:class})'
  'removeChild':
    'prefix': 'removeChild'
    'body': 'removeChild(${1:element})'
  'setInterval':
    'prefix': 'setInterval'
    'body': """
            setInterval(function() {
              ${1:// body}
            }, ${2:delay});
            $3
            """
  'require':
    'prefix': 'require'
    'body': 'require("${1:module}");'
  'setTimeout':
    'prefix': 'setTimeout'
    'body': """
            setTimeout(function() {
              ${1:// body}
            }, ${2:delay});
            $3
            """
  'strict mode':
    'prefix': 'use'
    'body': """
            "use strict";

            $0
            """
  'textContent':
    'prefix': 'textContent'
    'body': 'textContent = "${1:content}";'
  'toggle':
    'prefix': 'toggle'
    'body': 'toggle(${1:class})'
  'variable':
    'prefix': 'var'
    'body': """
            var $1 = $2;
            $3
            """

# CSS
'.source.css':
  'comment':
    'prefix': 'comment'
    'body': '/* $1 */$2'
  'divider':
    'prefix': 'divider'
    'body': """
            /*========================================
              $1
            ========================================*/
            """
  'pc tablet media query':
    'prefix': 'media-pc-tablet'
    'body': """
            @media only screen and (min-width: 769px) {
              $1
            }
            """
  'pc media query':
    'prefix': 'media-pc'
    'body': """
            @media only screen and (min-width: 961px) {
              $1
            }
            """

# HTML
'.text.html':
  'comment':
    'prefix': 'comment'
    'body': '<!-- $1 -->$2'
  'css link':
    'prefix': 'link'
    'body': '<link rel="stylesheet" href="${1:style}.css">'
  'html5 template':
    'prefix': 'html'
    'body': """
            <!DOCTYPE html>
            <html>
              <head>
                <meta charset="utf-8">
                <meta name="viewport" content="width=device-width">
                <link rel="stylesheet" href="${1:css/style}.css">
                <title>${2:title}</title>
              </head>
              <body>
                $3
                <script src="js/main.js"></script>
              </body>
            </html>
            """
  'js':
    'prefix': 'script'
    'body': '<script src="${1:js/}"></script>$2'
  'option':
    'prefix': 'option'
    'body': '<option value="$1">$2</option>$3'

# markdown
'.source.gfm':
  'code':
    'prefix': 'code'
    'body': """
            `$1`$2
            """
  'codeblock':
    'prefix': 'block'
    'body': """
            ```$1
            ```
            """
  'coffee':
    'prefix': 'coffee'
    'body': """
            ```coffee$1
            ```
            """
  'css':
    'prefix': 'css'
    'body': """
            ```css$1
            ```
            """
  'html':
    'prefix': 'html'
    'body': """
            ```html$1
            ```
            """
  'javascript':
    'prefix': 'js'
    'body': """
            ```js$1
            ```
            """
  'ruby':
    'prefix': 'ruby'
    'body': """
            ```ruby$1
            ```
            """
  'sass':
    'prefix': 'sass'
    'body': """
            ```sass$1
            ```
            """
